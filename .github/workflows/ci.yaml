name: Build, Test, and deploy

on: [push]

jobs:
  prepare-boost:
    runs-on: ubuntu-22.04
    name: Download and prepare Boost
    strategy:
      matrix:
        boost:
          - "1.76.0"
          # Used by RMS 14.2 / Python 11 and later
          - "1.81.0"

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Restore cached Boost source
        id: cache-boost
        uses: actions/cache@v3
        with:
          path: sources/boost/${{ matrix.boost }}
          key: boost-${{ matrix.boost }}-${{ hashFiles('bin/fetch-boost.sh') }}

      - name: Download Boost, and extract relevant source code
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          ./bin/fetch-boost.sh ${{ matrix.boost }}
          rm -rf sources/boost/boost_*
          rm -rf sources/boost/*.tar.gz

      - name: Store Boost source code
        uses: actions/upload-artifact@v4
        with:
          name: boost-${{ matrix.boost }}
          path: sources/boost/*
          if-no-files-found: error

  build:
    needs:
      - prepare-boost
    runs-on: ${{ matrix.os }}
    name: Build & Test
    strategy:
      matrix:
        python:
        - 3.7
        - 3.8  # Included in RMS 12.1, and newer
        - 3.9
        - "3.10"
        - 3.11  # Included in RMS 14.2, and newer
        - 3.12
        os:
        - ubuntu-20.04
        - macos-11

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Download Boost versions
        uses: actions/download-artifact@v4
        with:
          pattern: boost-*
          path: sources/boost/
          merge-multiple: true

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build
        env:
          PYTHON: python${{ matrix.python }}
          VERBOSE: "1"
        run: |
          if [[ $RUNNER_OS == "Linux" ]]; then
            docker-compose run build-linux
          elif [[ $RUNNER_OS == "macOS" ]]; then
              make build
          else
            # That is, windows
            echo "No supported, yet" >/dev/stderr
            exit 1
          fi
        shell: bash

      - name: Test
        run: make tests

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.python }}-${{ matrix.os }}
          path: wheelhouse/*.whl
          if-no-files-found: error

  publish:
    runs-on: ubuntu-20.04
    name: Publish wheels, and source to PyPi
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: Download compiled wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: wheelhouse/

      - name: Publish to PyPi
        env:
          USE_TEST_PYPI: "no"
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          PYPI_TEST_API_TOKEN: ${{ secrets.PYPI_TEST_API_TOKEN }}
        run: make upload
